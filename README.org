* Help me, Help you
[[https://github.com/redguardtoo/emacs.d/issues/169][Make this setup better]] if you find it useful.
* Warning
- If you are a newbie and want to use Emacs immediately, please check the section "Install stable version in easiest way".
- Emacs newer than the version 24.3.93.1 are *NOT* supported.
- I use [[http://www.vim.org][Vim]] key bindings. Check section *Tips* if you prefer Emacs key bindings.
- People in Mainland China need [[http://code.google.com/p/goagent/][goagent]] to download packages. Run command "http_proxy=http://127.0.0.1:8087 emacs -nw" in shell after starting goagent server (or any proxy server).
- C++ developers need tell Emacs location of header files. Please check see section `clang`.
- Windows users could use Emacs in [[http://www.cygwin.com/][Cygwin]] to avoid instaling other GNU tools. But this setup is still usable in native windows version if you set up environment variable HOME.
- My priority is make this setup stable. So I whitelist packages from [[http://melpa.milkbox.net][melpa]] (melpa-unstable, actually). It means by default packages from melpa-unstable are *invisible*. Modify variable "melpa-include-packages" in init-elpa.el if you want to install some package from melpa-unstable.
- In the bug report, please include environment details (OS, Emacs version ...) and the full output of `emacs --debug-init`.
- If a package is at myelpa, you can place its code at ~/.emacs.d/site-lisp. There are already some samples there.
- Remove bundled emacs 22 at first *if you are using OS X*!

* General
Most popular languages are supported (C/C++/Java/Ruby/Perl/Python/C#/Lua/Javascript ...).

Please contact the original developer if you don't know how to set up a package. [[http://www.emacswiki.org/emacs/][EmacsWiki]] also has all the tips.

A short tutorial for newbie is provided at section *Emacs quick guide*.

If you need a detailed guide, check my [[https://github.com/redguardtoo/mastering-emacs-in-one-year-guide][Mastering Emacs in one year]].

* Features
- 100% usable in terminal
- Real time HTML syntax checker
- git or subversion is *NOT* needed. You don't need run 'git submodule update'.
- optimized for cross-platform C++ development with CMake
- emacs-w3m (console web browser)
- eim (Chinese pinyin input method)
- the setup work on *ALL* platforms (Linux/Cygwin/Mac).
- The setup usable with Emacs 23
- evil-mode and its plugins (Vim key binding) bundled
- yasnippet bundled

* Install
If you prefer the method described in the section "Install stable version in easiest way", *you don't need read this section.*.

Please remove the file "$HOME/.emacs".

Uninstall any system Emacs plugins. For example, run "apt-get uninstall emacs-w3m" in Debian/Ubuntu to remove emacs-w3m. It's because all plugins will be placed at "$HOME/.emacs.d" from now on.

Download [[https://github.com/redguardtoo/emacs.d/archive/master.zip][this zip file]] and extract its content into ~/.emacs.d .

Or run command "cd ~; git clone https://github.com/redguardtoo/emacs.d.git .emacs.d" in terminal.

Ensure that the init.el contained in this repo ends up at ~/.emacs.d/init.el.

You *possibly* need run below command at the terminal at least once to update the content from package repositories:
#+BEGIN_SRC elisp
emacs -nw --batch -l ~/.emacs.d/init.el -f package-refresh-contents
#+END_SRC

The command "package-refresh-content" will fetch the latest package list from remote servers. It has to be done manually. It's not reasonable to *automatically* fetch the list for a normal text editor. 

* Emacs quick guide
** Step 1, Learn OS basics
- Know what is environment variable
- Know what is pipe, stdout, stdin
** Step 2, Read official tutorial at least once
Press "C-h t" (C means Ctrl) and start read tutorial.
- Know how to move cursor
- Know how to open help. Press "C-h v" and "C-h f".
** Step 3, Know org-mode basics
[[http://orgmode.org/][Org-mode]] is a for notes-keeping and planning.
Please watch the [[https://www.youtube.com/watch?v=oJTwQvgfgMM][Carsten Dominik's talk]]. It's really simple. The only hot key you need remember is "Tab".
** Step 4, Solve your first *specific* problem
For that specific problem, you can visit [[http://www.emacswiki.org/emacs/][EmacsWiki]] for the solution. Newbies can ask for help on [[http://www.reddit.com/r/emacs/]].
* Directory structure
init.el is main file which include all the other *.el files.

"lisp/init-elpa.el" define how and what packages will be installed from [[http://elpa.gnu.org][elpa]]/[[http://marmalade-repo.org][marmalade]]/[[http://melpa.milkbox.net][melpa]] by package manager.

The package manager will extract packages into ~/.emacs.d/elpa/.

I also manually download and extract some packages into ~/.emacs.d/site-lisp/. Packages in ~/.emacs.d/site-lisp/ is not visible to Emacs package manager.

My own snippets for [[https://github.com/capitaomorte/yasnippet][Yasnippet]] is in ~/.emacs.d/snippets.

Other directoris do not matter.

* Third party command line tools
They are *OPTIONAL*. Your Emacs will not crash if they are not installed.

** w3m (web browser in console) 
- needed by `w3m` (w3m is emacs package name written in elisp)
- install through OS package manager
- please note only emacs with GUI can display image

** lua
- required by `flymake-lua`
- install through OS package manager

** aspell or hunspell
- needed by `flyspell`
- hunspell is the alternative of `aspell`. So you need only one of them.
- install through OS package manager
- for aspell, you may need its dictionary like aspell-en
- I force the dictionary to "en_US" in init-spelling.el. You can modify it in init-spelling.el.
- I recommend aspell for programmers

** sbcl (lisp environment)
- needed by lisp `slime`
- install through OS package manager

** tidy or html5-tidy
- needed by `web-mode` for real time HTML syntax check
- install through OS package manager
- For html5-tidy, you need [[https://github.com/w3c/tidy-html5/archive/master.zip][download its source code]] and build it manually
- I recommend html5-tidy because it supports html5

** csslint
- install `node.js` through OS package manager, then `sudo npm install -g csslint`

** zip and unzip
- needed by `org-mode` to export org file to odt file
- install through OS package manager

** jshint
- install `node.js` through OS package manager, then `sudo npm install -g jshint`
- required by js-mode
- by default I use js2-mode which does NOT need jshint

** xsel
- needed by my clipboard command `copy-to-x-clipboard` and `paste-from-x-clipboard` under Linux
- install through OS package manager

** [[http://www.cmake.org][CMake]]
- needed by `cpputils-cmake`
- install through OS package manager
- Please use [[http://www.cmake.org/Wiki/CMake_FAQ][out-of-source build tree]] when using CMake

** [[http://clang.llvm.org][Clang]]
- needed by `cpputils-cmake`, `company-clang`
- install through OS package manager
- If you use `cpputils-cmake` and `cmake`, `cpputils-cmake` will do all the setup for you. You don't need read next item! But please spend *a few minutes to learn the basics of cmake*! There is a one minute step-by-step-guide in [[https://github.com/redguardtoo/cpputils-cmake][README of cpputils-cmake]] to teach you how to use cmake.
- If you use `company-clang`, add `(setq company-clang-arguments '("-I/example1/dir" "-I/example2/dir"))` into ~/.emacs.d/init.el

** GCC/Make
- needed by `flymake`
- install through OS package manager

** [[https://addons.mozilla.org/en-us/firefox/addon/mozrepl/][MozRepl (Firefox addon)]]
- needed by [[http://www.emacswiki.org/emacs/MozRepl][MozRepl]]
- used by Firefox

** [[http://ctags.sourceforge.net][CTags]]
- it creates tags file for code navigation
- needed by many tags related plugins
- install through OS package manager
- See [[http://blog.binchen.org/?p=1057][How to use ctags in Emacs effectively]] if you prefer my way

** [[http://www.gnu.org/software/global][GNU Global]] 
- needed by `ggtags.el`
- it creates index files for code navigation
- more advanced than ctags, supports references and better performance
- install through OS package manager

** pyflakes
- You need pyflakes for real time python syntax checker like `flymake-python`
- Install pip through OS package manager, then `pip install pyflakes`
- On cygwin you need install `setuptool` in order to install `pip`.

** libreoffice
- Only one executable `soffice` needed when converting odt file into doc (Microsoft Word 97)
- conversion will happen automatically when exporting org-mode to odt
- The conversion command is in variable `org-export-odt-convert-processes`
- Install through OS package manager
** js-beautify
- To beautify javascript code (insert extra space, for example)
- Install pip through OS package manager, then `pip install jsbeautifier`
* What is "OS package manager"
- [[https://github.com/cfg/apt-cyg][apt-cyg]] at Cygwin
- [[https://github.com/mxcl/homebrew][homebrew]] at Mac
- any package manager at Linux (apt-get at Ubuntu, yum at Redhat, pacman at Arch, emerge at Gentoo ...)

* Install stable version in easiest way
You don't need git or network any more. All you need are only two zip files.

Here are the *exact steps* you need follow:
- Remove the file "~/.emacs".
- Uninstall any system Emacs plugins. For example, run "apt-get uninstall emacs-w3m" in Debian/Ubuntu to remove emacs-w3m. It's because all plugins will be placed at "$HOME/.emacs.d" from now on.
- Download https://github.com/redguardtoo/emacs.d/archive/v1.1.zip
- Extract its content into empty directory "~/.emacs.d" ("~" means HOME directory). After extraction, there will be a file named "init.el" in "~/.emacs.d"
- Download [[https://github.com/redguardtoo/myelpa/archive/v1.1.zip]]
- Extract the zip somewhere, say "~/myelpa".
- Double check that there is a file named "archive-contents" in the directory "~/myelpa"
- Uncomment below code in ~/.emacs.d/init-elpa.el and start Emacs now!
#+BEGIN_SRC bash
(setq package-archives '(("myelpa" . "~/myelpa/")))
#+END_SRC

That's it. You will never need internet in the future. I tested it on Emacs 24.3.93.1, Emacs 24.3.1 and Emacs 23.4.

Please note that your packages are locked. So you *cannot* upgrade package online in the future *unless you comment out above code line*.

I don't recommend advanced users locking their packages.
* Report bug
Please file bug report at [[https://github.com/redguardtoo/emacs.d]]. Don't email me directly!

* Tips
By default EVIL (Vim emulation in Emacs) is used. You can comment out line containing "(require 'init-evil)" in init.el to unload it.

Some package cannot be downloaded automatically because of network problem.

You need manually `M-x list-packages` and install it or just `M-x package-refresh-content` and restart Emacs.

If you use `gnus` for email (Gmail, for example). Check ~/.emacs.d/init-gnus.el which includes my most settings except my private stuff. Here is [[http://blog.binchen.org/?p=403][my Gnus tutorial]].

To toggle Chinese input method (eim, for example), run command `M-x toggle-input-method`.

* FAQ
Please contact the original plugin developer if you find any plugin bug. My answer may be outdated soon.

** Why auto-completion/intellisense does not work?
I assume you use company-mode. Other plugins have similar setup.

At minimum:
- You need install clang
- Make sure your code is syntax correct at the beginning
- assign reasonable value into company-clang-arguments

Here is sample setup in ~/.emacs:
#+begin_src elisp
(setq company-clang-arguments '("-I/home/myname/projs/test-cmake" "-I/home/myname/projs/test-cmake/inc"))
#+end_src

In "friendly" Visual C++, you need do [[http://www.codeproject.com/Tips/588022/Using-Additional-Include-Directories][similar setup]].
** Use color theme in the terminal
#+BEGIN_SRC sh
TERM=xterm-256color emacs -nw
#+END_SRC
** Avoid Emacs maximized when it starts up
Comment out below line in init-misc.el:
#+BEGIN_SRC elisp
(add-hook 'window-setup-hook 'maximize-frame t)
#+END_SRC
** Preview&apply a color theme?
Check [[http://emacsthemes.caisah.info/]].

Write down the name of color theme (for example, molokai).

Insert below code into ~/.emacs.d/init.el,
#+BEGIN_SRC elisp
(require 'color-theme-molokai)
(color-theme-molokai)
#+END_SRC

"M-x color-theme-select" may not work in this setup. It's because there is some design flaw in Emacs.
* My personal custom.el (OPTIONAL)
It's publicized at [[http://blog.binchen.org/?p=430]]. It contains my personal stuff which is useless to you.
* About Emacs 23
Emacs 23 support will *be dropped* in one year <2015-04-24 Thu>.
Currently Emacs 23 does not support following packages:
- helm
- org-mode and its third party packages
- company-mode
- git-gutter
- yasnippet
- ggtags-mode

